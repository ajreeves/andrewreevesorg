st_read("~/Downloads/AL_slr_data_dist/AL_slr_final_dist.gdb/")
st_read("~/Downloads/AL_slr_data_dist/AL_slr_final_dist.gdb/")
library(sf)
tmp <- st_read("~/Downloads/AL_slr_data_dist/AL_slr_final_dist.gdb/")
tmp <- st_read("~/Downloads/AL_slr_data_dist/.")
library(readOGR)
install.packages("readOGR")
install.packages("rgdal")
tmp <- st_read("~/Downloads/AL_slr_data_dist.zip")
tmp <- st_read("~/Downloads/MD_Southeast_slr_data_dist.zip")
gdb_path <- "~/Downloads/MD_Southeast_slr_data_dist.zip"
layers <- st_layers(gdb_path)
gdb_path <- "~/Downloads/MD_Southeast_slr_data_dist/MD_Southeast_slr_final_dist.gdb"
layers <- st_layers(gdb_path)
print(layers)
library(ggplot2)
layer_name <- "MD_Southeast_low_0ft"
data <- st_read(dsn = gdb_path, layer = layer_name)
plot(data)
str(data)
ggplot(data) +
geom_sf() +
theme_minimal() +
labs(title = "Map from GDB File",
subtitle = layer_name,
caption = "Source: GDB File")
library(ggplot2)
ggplot(data) +
geom_sf() +
theme_minimal() +
labs(title = "Map from GDB File",
subtitle = layer_name,
caption = "Source: GDB File")
install.packages("tigris")
library("tigris")
md_counties <- counties(state = "MD", cb = TRUE)
ggplot() +
geom_sf(data = md_counties, fill = "lightgray", color = "black") +
geom_sf(data = gdb_data, aes(color = some_attribute), size = 1) +  # Replace 'some_attribute' with an actual attribute from your GDB data if needed
theme_minimal() +
labs(title = "Overlay of GDB Data on Maryland Counties",
subtitle = "County Boundaries with GDB Layer",
caption = "Source: U.S. Census Bureau TIGER/Line Shapefiles and GDB File")
gdb_data <- st_read(dsn = gdb_path, layer = layer_name)
ggplot() +
geom_sf(data = md_counties, fill = "lightgray", color = "black") +
geom_sf(data = gdb_data, aes(color = some_attribute), size = 1) +  # Replace 'some_attribute' with an actual attribute from your GDB data if needed
theme_minimal() +
labs(title = "Overlay of GDB Data on Maryland Counties",
subtitle = "County Boundaries with GDB Layer",
caption = "Source: U.S. Census Bureau TIGER/Line Shapefiles and GDB File")
head(gdb_data)
ggplot() +
geom_sf(data = md_counties, fill = "lightgray", color = "black")
ggplot() +
geom_sf(data = md_counties, fill = "lightgray", color = "black") +
geom_sf(data = gdb_data, size = 1)
print(layers)
layer_name <- "MD_Southeast_low_10ft"
gdb_data <- st_read(dsn = gdb_path, layer = layer_name)
ggplot() +
geom_sf(data = md_counties, fill = "lightgray", color = "black") +
geom_sf(data = gdb_data, size = 1) +  # Replace 'some_attribute' with an actual attribute from your GDB data if needed
theme_minimal() +
labs(title = "Overlay of GDB Data on Maryland Counties",
subtitle = "County Boundaries with GDB Layer",
caption = "Source: U.S. Census Bureau TIGER/Line Shapefiles and GDB File")
ggplot() +
geom_sf(data = md_counties, fill = "white", color = "black") +
geom_sf(data = gdb_data, size = 1) +  # Replace 'some_attribute' with an actual attribute from your GDB data if needed
theme_minimal() +
labs(title = "Overlay of GDB Data on Maryland Counties",
subtitle = "County Boundaries with GDB Layer",
caption = "Source: U.S. Census Bureau TIGER/Line Shapefiles and GDB File")
ggplot() +
geom_sf(data = md_counties, fill = "white", color = "black") +
geom_sf(data = gdb_data, fill = "blue", size = 1) +  # Replace 'some_attribute' with an actual attribute from your GDB data if needed
theme_minimal() +
labs(title = "Overlay of GDB Data on Maryland Counties",
subtitle = "County Boundaries with GDB Layer",
caption = "Source: U.S. Census Bureau TIGER/Line Shapefiles and GDB File")
ggplot() +
geom_sf(data = md_counties, fill = "white", color = "black") +
geom_sf(data = gdb_data, color = "blue", size = 1) +  # Replace 'some_attribute' with an actual attribute from your GDB data if needed
theme_minimal() +
labs(title = "Overlay of GDB Data on Maryland Counties",
subtitle = "County Boundaries with GDB Layer",
caption = "Source: U.S. Census Bureau TIGER/Line Shapefiles and GDB File")
head(gdb_data)
print(layers)
layer_name <- "MD_Southeast_slr_10ft"
gdb_data <- st_read(dsn = gdb_path, layer = layer_name)
ggplot() +
geom_sf(data = md_counties, fill = "white", color = "black") +
geom_sf(data = gdb_data, color = "blue", size = 1) +  # Replace 'some_attribute' with an actual attribute from your GDB data if needed
theme_minimal() +
labs(title = "Overlay of GDB Data on Maryland Counties",
subtitle = "County Boundaries with GDB Layer",
caption = "Source: U.S. Census Bureau TIGER/Line Shapefiles and GDB File")
md_counties <- st_transform(md_counties, crs = st_crs(gdb_data))
# Find the intersection between the county shapefile and the GDB data
intersection <- st_intersection(md_counties, gdb_data)
# Find the intersection between the county shapefile and the GDB data
intersection <- st_intersection(md_counties, gdb_data)
q()
